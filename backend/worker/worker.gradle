/********************************************************************************
 * Copyright (c) 2020, 2022 Contributors to the Eclipse Foundation
 *
 * See the NOTICE file(s) distributed with this work for additional
 * information regarding copyright ownership.
 *
 * This program and the accompanying materials are made available under the
 * terms of the Eclipse Public License 2.0 which is available at
 * http://www.eclipse.org/legal/epl-2.0
 *
 * SPDX-License-Identifier: EPL-2.0
 ********************************************************************************/
plugins {
    id 'application'
}

apply from: "$rootDir/gradle/java.gradle"

dependencies {
    implementation project(':backend:common')
    implementation project(':backend:heap-dump-analyzer:api')
    runtimeOnly project(':backend:heap-dump-analyzer:provider')
    runtimeOnly project(':backend:heap-dump-analyzer:hook')
    implementation project(':backend:gc-log-analyzer')
    implementation project(':backend:thread-dump-analyzer')

    implementation group: 'io.vertx', name: 'vertx-core', version: "${vertx_version}"
    implementation group: 'io.vertx', name: 'vertx-config', version: "${vertx_version}"
    implementation group: 'io.vertx', name: 'vertx-web-client', version: "${vertx_version}"

    implementation 'com.hierynomus:sshj:0.30.0'

    implementation 'com.aliyun.oss:aliyun-sdk-oss:2.8.3'

    implementation 'com.amazonaws:aws-java-sdk-s3:1.12.57'

    testImplementation 'junit:junit:4.12'
    testImplementation group: 'io.vertx', name: 'vertx-unit', version: "${vertx_version}"
}

run {
    jvmArgs("-Dmat-deps=${mat_deps_dir_path}")
    classpath "${mat_deps_dir_path}/${osgi_jar}"
}

test {
    jvmArgs("-Dmat-deps=${mat_deps_dir_path}")
    classpath += files("${mat_deps_dir_path}/${osgi_jar}")
}

application {
    mainClass.set('org.eclipse.jifa.worker.Worker')

    applicationDistribution.from("${mat_deps_dir_path}") {
        include "*.jar"
        into "${mat_deps_dir_name}"
    }
}

startScripts {
    // workaround
    setDefaultJvmOpts(['THE_DEFAULT_JVM_OPTS'])
    classpath += files("${osgi_jar}")

    doLast {
        unixScript.text = unixScript.text.replace(
                '\'\"THE_DEFAULT_JVM_OPTS\"\'', '-D' + "${mat_deps_dir_name}" + '=$APP_HOME/' + "${mat_deps_dir_name}"
        )

        unixScript.text = unixScript.text.replace(
                '$APP_HOME/lib/' + "${osgi_jar}", '$APP_HOME/' + "${mat_deps_dir_name}/${osgi_jar}"
        )

        windowsScript.text = windowsScript.text.replace(
                'THE_DEFAULT_JVM_OPTS', '-D' + "${mat_deps_dir_name}" + '=%APP_HOME%\\' + "${mat_deps_dir_name}"
        )

        windowsScript.text = windowsScript.text.replace(
                '%APP_HOME%\\lib\\' + "${osgi_jar}", '%APP_HOME%\\' + "${mat_deps_dir_name}\\${osgi_jar}"
        )
    }
}

clean {
    doFirst {
        delete files("${projectDir}/file-uploads", "${projectDir}/workspace")
    }
}
